#!/usr/bin/env bash

function printUsage(){
    echo "USAGE: $0 run <gcp-user-project> <cram-url> <output-bucket> <sample-name> <sort-bam>"
    echo "  <gcp-user-project> The GCP user project"
    echo "  <cram-url>         The complete gs url to input CRAM"
    echo "  <output-bucket>    The name of bucket to copy output fastq files to"
    echo "  <sample-name>      The tag that FASTQ filenames will have as start"
    echo "  <sort-bam>         (Optional) If set to 'TRUE' BAM will be sorted by read name before running SamToFastq."
    echo "                     This increases runtime but lowers peak memory usage. Value needs to be empty, 'TRUE' or 'FALSE'."
    exit 1
}

function run() {
    gcp_user_project=$1 && shift
    cram_url=$1 && shift
    out_bucket=$1 && shift
    sample_name=$1 && shift
    sort_bam=$1 && shift

    # sanity checks
    if [[ ! "${cram_url}" =~ ^gs[-/:._a-zA-Z0-9]+$ ]]; then
      echo "[ERROR] CRAM URL wrong format (must start with 'gs' and can only contain [a-zA-Z0-9] or '-' or '/' or ':' or '_')" >&2 && exit 1
    fi
    if [[ ! "${out_bucket}" =~ ^[-/a-zA-Z0-9]+$ ]]; then
      echo "[ERROR] Output bucket wrong format (can only contain [a-zA-Z0-9] or '-' or '/')" >&2 && exit 1
    fi
    if [[ ! "${sample_name}" =~ ^[-a-zA-Z0-9]+$ ]]; then
      echo "[ERROR] Sample name wrong format (can only contain [a-zA-Z0-9] or '-')" >&2 && exit 1
    fi
    if [[ "${sort_bam}" != "" && "${sort_bam}" != "TRUE" && "${sort_bam}" != "FALSE" ]]; then
      echo "[ERROR] 'sort_bam' variable can only be equal to '', 'TRUE' or 'FALSE'" >&2 && exit 1
    fi

    pod_name="$(echo "cram2fq-${sample_name}" | awk '{print tolower($0)}')"
    clean_pod_name="$(echo "${pod_name}" | tr '_' '-' | tr '[:upper:]' '[:lower:]' | tr '.' '-')"
    cram_url_for_sed="$(echo "${cram_url}" | sed 's/\//\\\//g')"
    out_bucket_for_sed="$(echo "${out_bucket}" | sed 's/\//\\\//g')"

    # Make sure correct credentials are available
    gcloud container clusters get-credentials research-cluster-prod-1 --region europe-west4 --project hmf-crunch || exit 1

    scripts_dir=$(dirname "$0") || exit 1
    deploy_yaml=${scripts_dir}/k8/hmf-crunch/deploy.yaml

    sed \
    -e "s/VAR_POD_NAME/${clean_pod_name}/g" \
    -e "s/VAR_CRAM_URL/${cram_url_for_sed}/g" \
    -e "s/VAR_OUTPUT_BUCKET/${out_bucket_for_sed}/g" \
    -e "s/VAR_SAMPLE_NAME/${sample_name}/g" \
    -e "s/VAR_SORT_BAM/${sort_bam}/g" \
    -e "s/VAR_GCP_USER_PROJECT/${gcp_user_project}/g" \
    ${deploy_yaml} \
    | kubectl create -f -
}

if [ $# -lt 2 ]; then
  printUsage
fi

CMD=$1
shift

case $CMD in
run)
    run "$@"
    ;;
*)
    printUsage
    ;;
esac